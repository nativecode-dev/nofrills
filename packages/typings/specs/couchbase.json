{
  "name": "couchbase",
  "namespaces": {
    "couchbase": {
      "classes": {
        "Bucket": {
          "constructors": [],
          "description": "The Bucket class represents a connection to a Couchbase bucket.  Never\ninstantiate this class directly.  Instead use the Cluster#openBucket\nmethod instead.",
          "methods": {
            "append": {
              "name": "append",
              "parameters": {
                "key": {
                  "description": "The target document key.",
                  "name": "key",
                  "optional": false,
                  "type": {
                    "name": "string|Buffer",
                    "basetypes": ["string", "Buffer"]
                  }
                },
                "fragment": {
                  "description": "The document's contents to append.",
                  "name": "fragment",
                  "optional": false,
                  "type": {
                    "name": "any",
                    "basetypes": []
                  }
                },
                "options": {
                  "description": "",
                  "name": "options",
                  "optional": true,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "Bucket.OpCallback",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "counter": {
              "name": "counter",
              "parameters": {
                "key": {
                  "description": "The target document key.",
                  "name": "key",
                  "optional": false,
                  "type": {
                    "name": "string|Buffer",
                    "basetypes": ["string", "Buffer"]
                  }
                },
                "delta": {
                  "description": "The amount to add or subtract from the counter value.  This value may be\nany non-zero integer.",
                  "name": "delta",
                  "optional": false,
                  "type": {
                    "name": "number",
                    "basetypes": []
                  }
                },
                "options": {
                  "description": "",
                  "name": "options",
                  "optional": true,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "Bucket.OpCallback",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "disconnect": {
              "name": "disconnect",
              "parameters": {},
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "enableN1ql": {
              "name": "enableN1ql",
              "parameters": {
                "hosts": {
                  "description": "An array of host/port combinations which are N1QL servers attached to\nthis cluster.",
                  "name": "hosts",
                  "optional": false,
                  "type": {
                    "name": "string|Array<string>",
                    "basetypes": ["string", "Array<string>"]
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "get": {
              "name": "get",
              "parameters": {
                "key": {
                  "description": "The target document key.",
                  "name": "key",
                  "optional": false,
                  "type": {
                    "name": "string|Buffer",
                    "basetypes": ["string", "Buffer"]
                  }
                },
                "options": {
                  "description": "",
                  "name": "options",
                  "optional": true,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "Bucket.OpCallback",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "getAndLock": {
              "name": "getAndLock",
              "parameters": {
                "key": {
                  "description": "The target document key.",
                  "name": "key",
                  "optional": false,
                  "type": {
                    "name": "string|Buffer",
                    "basetypes": ["string", "Buffer"]
                  }
                },
                "options": {
                  "description": "",
                  "name": "options",
                  "optional": true,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "Bucket.OpCallback",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "getAndTouch": {
              "name": "getAndTouch",
              "parameters": {
                "key": {
                  "description": "The target document key.",
                  "name": "key",
                  "optional": false,
                  "type": {
                    "name": "string|Buffer",
                    "basetypes": ["string", "Buffer"]
                  }
                },
                "expiry": {
                  "description": "The expiration time to use. If a value of 0 is provided, then the\ncurrent expiration time is cleared and the key is set to\nnever expire. Otherwise, the key is updated to expire in the\ntime provided (in seconds).",
                  "name": "expiry",
                  "optional": false,
                  "type": {
                    "name": "number",
                    "basetypes": []
                  }
                },
                "options": {
                  "description": "",
                  "name": "options",
                  "optional": true,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "Bucket.OpCallback",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "getMulti": {
              "name": "getMulti",
              "parameters": {
                "keys": {
                  "description": "The target document keys.",
                  "name": "keys",
                  "optional": false,
                  "type": {
                    "name": "Array<(Buffer|string)>",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "Bucket.MultiGetCallback",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "getReplica": {
              "name": "getReplica",
              "parameters": {
                "key": {
                  "description": "The target document key.",
                  "name": "key",
                  "optional": false,
                  "type": {
                    "name": "string|Buffer",
                    "basetypes": ["string", "Buffer"]
                  }
                },
                "options": {
                  "description": "",
                  "name": "options",
                  "optional": true,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "Bucket.OpCallback",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "insert": {
              "name": "insert",
              "parameters": {
                "key": {
                  "description": "The target document key.",
                  "name": "key",
                  "optional": false,
                  "type": {
                    "name": "string|Buffer",
                    "basetypes": ["string", "Buffer"]
                  }
                },
                "value": {
                  "description": "The document's contents.",
                  "name": "value",
                  "optional": false,
                  "type": {
                    "name": "any",
                    "basetypes": []
                  }
                },
                "options": {
                  "description": "",
                  "name": "options",
                  "optional": true,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "Bucket.OpCallback",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "lookupIn": {
              "name": "lookupIn",
              "parameters": {
                "key": {
                  "description": "",
                  "name": "key",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                },
                "options": {
                  "description": "",
                  "name": "options",
                  "optional": false,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "LookupInBuilder",
                "basetypes": []
              }
            },
            "manager": {
              "name": "manager",
              "parameters": {},
              "return": {
                "name": "BucketManager",
                "basetypes": []
              }
            },
            "mutateIn": {
              "name": "mutateIn",
              "parameters": {
                "key": {
                  "description": "",
                  "name": "key",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                },
                "options": {
                  "description": "",
                  "name": "options",
                  "optional": false,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "MutateInBuilder",
                "basetypes": []
              }
            },
            "prepend": {
              "name": "prepend",
              "parameters": {
                "key": {
                  "description": "The target document key.",
                  "name": "key",
                  "optional": false,
                  "type": {
                    "name": "string|Buffer",
                    "basetypes": ["string", "Buffer"]
                  }
                },
                "fragment": {
                  "description": "The document's contents to prepend.",
                  "name": "fragment",
                  "optional": false,
                  "type": {
                    "name": "any",
                    "basetypes": []
                  }
                },
                "options": {
                  "description": "",
                  "name": "options",
                  "optional": true,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "Bucket.OpCallback",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "query": {
              "name": "query",
              "parameters": {
                "query": {
                  "description": "The query to execute.",
                  "name": "query",
                  "optional": false,
                  "type": {
                    "name": "ViewQuery|N1qlQuery",
                    "basetypes": ["ViewQuery", "N1qlQuery"]
                  }
                },
                "params": {
                  "description": "A list or map to do replacements on a N1QL query.",
                  "name": "params",
                  "optional": true,
                  "type": {
                    "name": "Object|Array",
                    "basetypes": ["Object", "Array"]
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "Bucket.QueryCallback",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "Bucket.ViewQueryResponseBucket.N1qlQueryResponse",
                "basetypes": []
              }
            },
            "remove": {
              "name": "remove",
              "parameters": {
                "key": {
                  "description": "The target document key.",
                  "name": "key",
                  "optional": false,
                  "type": {
                    "name": "string|Buffer",
                    "basetypes": ["string", "Buffer"]
                  }
                },
                "options": {
                  "description": "",
                  "name": "options",
                  "optional": true,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "Bucket.OpCallback",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "replace": {
              "name": "replace",
              "parameters": {
                "key": {
                  "description": "The target document key.",
                  "name": "key",
                  "optional": false,
                  "type": {
                    "name": "string|Buffer",
                    "basetypes": ["string", "Buffer"]
                  }
                },
                "value": {
                  "description": "The document's contents.",
                  "name": "value",
                  "optional": false,
                  "type": {
                    "name": "any",
                    "basetypes": []
                  }
                },
                "options": {
                  "description": "",
                  "name": "options",
                  "optional": true,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "Bucket.OpCallback",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "setTranscoder": {
              "name": "setTranscoder",
              "parameters": {
                "encoder": {
                  "description": "The function for encoding.",
                  "name": "encoder",
                  "optional": false,
                  "type": {
                    "name": "EncoderFunction",
                    "basetypes": []
                  }
                },
                "decoder": {
                  "description": "The function for decoding.",
                  "name": "decoder",
                  "optional": false,
                  "type": {
                    "name": "DecoderFunction",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "touch": {
              "name": "touch",
              "parameters": {
                "key": {
                  "description": "The target document key.",
                  "name": "key",
                  "optional": false,
                  "type": {
                    "name": "string|Buffer",
                    "basetypes": ["string", "Buffer"]
                  }
                },
                "expiry": {
                  "description": "The expiration time to use. If a value of 0 is provided, then the\ncurrent expiration time is cleared and the key is set to\nnever expire. Otherwise, the key is updated to expire in the\ntime provided (in seconds).  Values larger than 302460*60 seconds\n(30 days) are interpreted as absolute times (from the epoch).",
                  "name": "expiry",
                  "optional": false,
                  "type": {
                    "name": "number",
                    "basetypes": []
                  }
                },
                "options": {
                  "description": "",
                  "name": "options",
                  "optional": true,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                },
                "callback.": {
                  "description": "",
                  "name": "callback.",
                  "optional": false,
                  "type": {
                    "name": "Bucket.OpCallback",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "unlock": {
              "name": "unlock",
              "parameters": {
                "key": {
                  "description": "The target document key.",
                  "name": "key",
                  "optional": false,
                  "type": {
                    "name": "string|Buffer",
                    "basetypes": ["string", "Buffer"]
                  }
                },
                "cas": {
                  "description": "The CAS value returned when the key was locked.  This operation will fail\nif the CAS value provided does not match that which was the result of the\noriginal lock operation.",
                  "name": "cas",
                  "optional": false,
                  "type": {
                    "name": "Bucket.CAS",
                    "basetypes": []
                  }
                },
                "options": {
                  "description": "",
                  "name": "options",
                  "optional": true,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "Bucket.OpCallback",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "upsert": {
              "name": "upsert",
              "parameters": {
                "key": {
                  "description": "The target document key.",
                  "name": "key",
                  "optional": false,
                  "type": {
                    "name": "string|Buffer",
                    "basetypes": ["string", "Buffer"]
                  }
                },
                "value": {
                  "description": "The document's contents.",
                  "name": "value",
                  "optional": false,
                  "type": {
                    "name": "any",
                    "basetypes": []
                  }
                },
                "options": {
                  "description": "",
                  "name": "options",
                  "optional": true,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "Bucket.OpCallback",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            }
          },
          "name": "Bucket",
          "properties": {
            "clientVersion": {
              "name": "clientVersion",
              "readonly": false,
              "type": {
                "name": "string",
                "basetypes": []
              }
            },
            "configThrottle": {
              "name": "configThrottle",
              "readonly": false,
              "type": {
                "name": "number",
                "basetypes": []
              }
            },
            "connectionTimeout": {
              "name": "connectionTimeout",
              "readonly": false,
              "type": {
                "name": "number",
                "basetypes": []
              }
            },
            "durabilityInterval": {
              "name": "durabilityInterval",
              "readonly": false,
              "type": {
                "name": "number",
                "basetypes": []
              }
            },
            "durabilityTimeout": {
              "name": "durabilityTimeout",
              "readonly": false,
              "type": {
                "name": "number",
                "basetypes": []
              }
            },
            "lcbVersion": {
              "name": "lcbVersion",
              "readonly": false,
              "type": {
                "name": "string",
                "basetypes": []
              }
            },
            "managementTimeout": {
              "name": "managementTimeout",
              "readonly": false,
              "type": {
                "name": "number",
                "basetypes": []
              }
            },
            "nodeConnectionTimeout": {
              "name": "nodeConnectionTimeout",
              "readonly": false,
              "type": {
                "name": "number",
                "basetypes": []
              }
            },
            "operationTimeout": {
              "name": "operationTimeout",
              "readonly": false,
              "type": {
                "name": "number",
                "basetypes": []
              }
            },
            "viewTimeout": {
              "name": "viewTimeout",
              "readonly": false,
              "type": {
                "name": "number",
                "basetypes": []
              }
            }
          },
          "source": "http://docs.couchbase.com/sdk-api/couchbase-node-client-2.1.4/Bucket.html"
        },
        "N1qlQueryResponse": {
          "constructors": [],
          "description": "",
          "methods": {},
          "name": "N1qlQueryResponse",
          "properties": {},
          "source": "http://docs.couchbase.com/sdk-api/couchbase-node-client-2.1.4/Bucket.N1qlQueryResponse.html"
        },
        "Meta": {
          "constructors": [],
          "description": "The meta-information available from a view query response.",
          "methods": {},
          "name": "Meta",
          "properties": {
            "total_rows": {
              "name": "total_rows",
              "readonly": false,
              "type": {
                "name": "number",
                "basetypes": []
              }
            }
          },
          "source": "http://docs.couchbase.com/sdk-api/couchbase-node-client-2.1.4/Bucket.ViewQueryResponse.Meta.html"
        },
        "TranscoderDoc": {
          "constructors": [],
          "description": "A class used in relation to transcoders",
          "methods": {},
          "name": "TranscoderDoc",
          "properties": {},
          "source": "http://docs.couchbase.com/sdk-api/couchbase-node-client-2.1.4/Bucket.TranscoderDoc.html"
        },
        "ViewQueryResponse": {
          "constructors": [],
          "description": "",
          "methods": {},
          "name": "ViewQueryResponse",
          "properties": {},
          "source": "http://docs.couchbase.com/sdk-api/couchbase-node-client-2.1.4/Bucket.ViewQueryResponse.html"
        },
        "BucketManager": {
          "constructors": [{
            "parameters": {
              "bucket": {
                "description": "",
                "name": "bucket",
                "optional": false,
                "type": {
                  "name": "void",
                  "basetypes": []
                }
              }
            },
            "public": true
          }],
          "description": "A class for performing management operations against a bucket. This class\nshould not be instantiated directly, but instead through the use of the\nBucket#manager method instead.",
          "methods": {
            "flush": {
              "name": "flush",
              "parameters": {
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "getDesignDocument": {
              "name": "getDesignDocument",
              "parameters": {
                "name": {
                  "description": "",
                  "name": "name",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "getDesignDocuments": {
              "name": "getDesignDocuments",
              "parameters": {
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "insertDesignDocument": {
              "name": "insertDesignDocument",
              "parameters": {
                "name": {
                  "description": "",
                  "name": "name",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                },
                "data": {
                  "description": "",
                  "name": "data",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "removeDesignDocument": {
              "name": "removeDesignDocument",
              "parameters": {
                "name": {
                  "description": "",
                  "name": "name",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "upsertDesignDocument": {
              "name": "upsertDesignDocument",
              "parameters": {
                "name": {
                  "description": "",
                  "name": "name",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                },
                "data": {
                  "description": "",
                  "name": "data",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            }
          },
          "name": "BucketManager",
          "properties": {},
          "source": "http://docs.couchbase.com/sdk-api/couchbase-node-client-2.1.4/BucketManager.html"
        },
        "Cluster": {
          "constructors": [{
            "parameters": {
              "cnstroptions": {
                "description": "The connection string for your cluster.",
                "name": "cnstroptions",
                "optional": false,
                "type": {
                  "name": "string|Object",
                  "basetypes": ["string", "Object"]
                }
              }
            },
            "public": true
          }],
          "description": "",
          "methods": {
            "manager": {
              "name": "manager",
              "parameters": {},
              "return": {
                "name": "ClusterManager",
                "basetypes": []
              }
            },
            "openBucket": {
              "name": "openBucket",
              "parameters": {
                "name": {
                  "description": "The name of the bucket to open.",
                  "name": "name",
                  "optional": true,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                },
                "password": {
                  "description": "Password for the bucket.",
                  "name": "password",
                  "optional": true,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "Callback to invoke on connection success or failure.",
                  "name": "callback",
                  "optional": true,
                  "type": {
                    "name": "function",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "Bucket",
                "basetypes": []
              }
            }
          },
          "name": "Cluster",
          "properties": {},
          "source": "http://docs.couchbase.com/sdk-api/couchbase-node-client-2.1.4/Cluster.html"
        },
        "ClusterManager": {
          "constructors": [{
            "parameters": {
              "clusterusernamepassword": {
                "description": "",
                "name": "clusterusernamepassword",
                "optional": false,
                "type": {
                  "name": "void",
                  "basetypes": []
                }
              }
            },
            "public": true
          }],
          "description": "Class for performing management operations against a cluster.",
          "methods": {
            "createBucket": {
              "name": "createBucket",
              "parameters": {
                "name": {
                  "description": "",
                  "name": "name",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                },
                "opts": {
                  "description": "",
                  "name": "opts",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "listBuckets": {
              "name": "listBuckets",
              "parameters": {
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "removeBucket": {
              "name": "removeBucket",
              "parameters": {
                "name": {
                  "description": "",
                  "name": "name",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                },
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            }
          },
          "name": "ClusterManager",
          "properties": {},
          "source": "http://docs.couchbase.com/sdk-api/couchbase-node-client-2.1.4/ClusterManager.html"
        },
        "CouchbaseError": {
          "constructors": [],
          "description": "The virtual class thrown for all Couchnode errors.",
          "methods": {},
          "name": "CouchbaseError",
          "properties": {
            "code": {
              "name": "code",
              "readonly": false,
              "type": {
                "name": "errors",
                "basetypes": []
              }
            }
          },
          "source": "http://docs.couchbase.com/sdk-api/couchbase-node-client-2.1.4/CouchbaseError.html"
        },
        "DocumentFragment": {
          "constructors": [],
          "description": "Represents multiple chunks of a full Document.",
          "methods": {
            "content": {
              "name": "content",
              "parameters": {
                "path": {
                  "description": "",
                  "name": "path",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "contentByIndex": {
              "name": "contentByIndex",
              "parameters": {
                "index": {
                  "description": "",
                  "name": "index",
                  "optional": false,
                  "type": {
                    "name": "number",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "exists": {
              "name": "exists",
              "parameters": {
                "path": {
                  "description": "",
                  "name": "path",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            }
          },
          "name": "DocumentFragment",
          "properties": {},
          "source": "http://docs.couchbase.com/sdk-api/couchbase-node-client-2.1.4/DocumentFragment.html"
        },
        "LookupInBuilder": {
          "constructors": [],
          "description": "Builder used to create a set of sub-document lookup operations.",
          "methods": {
            "execute": {
              "name": "execute",
              "parameters": {
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "exists": {
              "name": "exists",
              "parameters": {
                "path": {
                  "description": "",
                  "name": "path",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "get": {
              "name": "get",
              "parameters": {
                "path": {
                  "description": "",
                  "name": "path",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            }
          },
          "name": "LookupInBuilder",
          "properties": {},
          "source": "http://docs.couchbase.com/sdk-api/couchbase-node-client-2.1.4/LookupInBuilder.html"
        },
        "MutateInBuilder": {
          "constructors": [],
          "description": "Builder used to create a set of sub-document mutation operations.",
          "methods": {
            "addUnique": {
              "name": "addUnique",
              "parameters": {
                "path": {
                  "description": "",
                  "name": "path",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                },
                "value": {
                  "description": "",
                  "name": "value",
                  "optional": false,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                },
                "createParents": {
                  "description": "",
                  "name": "createParents",
                  "optional": false,
                  "type": {
                    "name": "boolean",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "arrayInsert": {
              "name": "arrayInsert",
              "parameters": {
                "path": {
                  "description": "",
                  "name": "path",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                },
                "value": {
                  "description": "",
                  "name": "value",
                  "optional": false,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "counter": {
              "name": "counter",
              "parameters": {
                "path": {
                  "description": "",
                  "name": "path",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                },
                "delta": {
                  "description": "",
                  "name": "delta",
                  "optional": false,
                  "type": {
                    "name": "number",
                    "basetypes": []
                  }
                },
                "createParents": {
                  "description": "",
                  "name": "createParents",
                  "optional": false,
                  "type": {
                    "name": "boolean",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "execute": {
              "name": "execute",
              "parameters": {
                "callback": {
                  "description": "",
                  "name": "callback",
                  "optional": false,
                  "type": {
                    "name": "void",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "insert": {
              "name": "insert",
              "parameters": {
                "path": {
                  "description": "",
                  "name": "path",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                },
                "value": {
                  "description": "",
                  "name": "value",
                  "optional": false,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                },
                "createParents": {
                  "description": "",
                  "name": "createParents",
                  "optional": false,
                  "type": {
                    "name": "boolean",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "pushBack": {
              "name": "pushBack",
              "parameters": {
                "path": {
                  "description": "",
                  "name": "path",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                },
                "value": {
                  "description": "",
                  "name": "value",
                  "optional": false,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                },
                "createParents": {
                  "description": "",
                  "name": "createParents",
                  "optional": false,
                  "type": {
                    "name": "boolean",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "pushFront": {
              "name": "pushFront",
              "parameters": {
                "path": {
                  "description": "",
                  "name": "path",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                },
                "value": {
                  "description": "",
                  "name": "value",
                  "optional": false,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                },
                "createParents": {
                  "description": "",
                  "name": "createParents",
                  "optional": false,
                  "type": {
                    "name": "boolean",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "remove": {
              "name": "remove",
              "parameters": {
                "path": {
                  "description": "",
                  "name": "path",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "replace": {
              "name": "replace",
              "parameters": {
                "path": {
                  "description": "",
                  "name": "path",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                },
                "value": {
                  "description": "",
                  "name": "value",
                  "optional": false,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "upsert": {
              "name": "upsert",
              "parameters": {
                "path": {
                  "description": "",
                  "name": "path",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                },
                "value": {
                  "description": "",
                  "name": "value",
                  "optional": false,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                },
                "createParents": {
                  "description": "",
                  "name": "createParents",
                  "optional": false,
                  "type": {
                    "name": "boolean",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "void",
                "basetypes": []
              }
            }
          },
          "name": "MutateInBuilder",
          "properties": {},
          "source": "http://docs.couchbase.com/sdk-api/couchbase-node-client-2.1.4/MutateInBuilder.html"
        },
        "N1qlQuery": {
          "constructors": [],
          "description": "",
          "methods": {
            ".fromString": {
              "name": ".fromString",
              "parameters": {
                "str": {
                  "description": "The N1QL query string.",
                  "name": "str",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "N1qlStringQuery",
                "basetypes": []
              }
            },
            "toString": {
              "name": "toString",
              "parameters": {},
              "return": {
                "name": "void",
                "basetypes": []
              }
            }
          },
          "name": "N1qlQuery",
          "properties": {
            ".Consistency": {
              "name": ".Consistency",
              "readonly": false,
              "type": {
                "name": "number",
                "basetypes": []
              }
            }
          },
          "source": "http://docs.couchbase.com/sdk-api/couchbase-node-client-2.1.4/N1qlQuery.html"
        },
        "N1qlStringQuery": {
          "constructors": [],
          "description": "",
          "methods": {
            "adhoc": {
              "name": "adhoc",
              "parameters": {
                "adhoc": {
                  "description": "",
                  "name": "adhoc",
                  "optional": false,
                  "type": {
                    "name": "boolean",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "N1qlStringQuery",
                "basetypes": []
              }
            },
            "consistency": {
              "name": "consistency",
              "parameters": {
                "val": {
                  "description": "",
                  "name": "val",
                  "optional": false,
                  "type": {
                    "name": "N1qlQuery.Consistency",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "N1qlStringQuery",
                "basetypes": []
              }
            },
            "toObject": {
              "name": "toObject",
              "parameters": {},
              "return": {
                "name": "void",
                "basetypes": []
              }
            },
            "toString": {
              "name": "toString",
              "parameters": {},
              "return": {
                "name": "void",
                "basetypes": []
              }
            }
          },
          "name": "N1qlStringQuery",
          "properties": {},
          "source": "http://docs.couchbase.com/sdk-api/couchbase-node-client-2.1.4/N1qlStringQuery.html"
        },
        "SpatialQuery": {
          "constructors": [],
          "description": "",
          "methods": {
            ".from": {
              "name": ".from",
              "parameters": {
                "ddoc": {
                  "description": "The design document to use.",
                  "name": "ddoc",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                },
                "name": {
                  "description": "The view to use.",
                  "name": "name",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "SpatialQuery",
                "basetypes": []
              }
            },
            "bbox": {
              "name": "bbox",
              "parameters": {
                "bbox": {
                  "description": "",
                  "name": "bbox",
                  "optional": false,
                  "type": {
                    "name": "Array<number>",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "SpatialQuery",
                "basetypes": []
              }
            },
            "custom": {
              "name": "custom",
              "parameters": {
                "opts": {
                  "description": "",
                  "name": "opts",
                  "optional": false,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "SpatialQuery",
                "basetypes": []
              }
            },
            "from": {
              "name": "from",
              "parameters": {
                "ddoc": {
                  "description": "The design document to use.",
                  "name": "ddoc",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                },
                "name": {
                  "description": "The view to use.",
                  "name": "name",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "SpatialQuery",
                "basetypes": []
              }
            },
            "limit": {
              "name": "limit",
              "parameters": {
                "limit": {
                  "description": "",
                  "name": "limit",
                  "optional": false,
                  "type": {
                    "name": "number",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "SpatialQuery",
                "basetypes": []
              }
            },
            "skip": {
              "name": "skip",
              "parameters": {
                "skip": {
                  "description": "",
                  "name": "skip",
                  "optional": false,
                  "type": {
                    "name": "number",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "SpatialQuery",
                "basetypes": []
              }
            },
            "stale": {
              "name": "stale",
              "parameters": {
                "stale": {
                  "description": "How to update the index.",
                  "name": "stale",
                  "optional": false,
                  "type": {
                    "name": "SpatialQuery.Update",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "SpatialQuery",
                "basetypes": []
              }
            }
          },
          "name": "SpatialQuery",
          "properties": {
            ".Update": {
              "name": ".Update",
              "readonly": false,
              "type": {
                "name": "number",
                "basetypes": []
              }
            }
          },
          "source": "http://docs.couchbase.com/sdk-api/couchbase-node-client-2.1.4/SpatialQuery.html"
        },
        "ViewQuery": {
          "constructors": [],
          "description": "",
          "methods": {
            ".from": {
              "name": ".from",
              "parameters": {
                "ddoc": {
                  "description": "The design document to use.",
                  "name": "ddoc",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                },
                "name": {
                  "description": "The view to use.",
                  "name": "name",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "ViewQuery",
                "basetypes": []
              }
            },
            "custom": {
              "name": "custom",
              "parameters": {
                "opts": {
                  "description": "",
                  "name": "opts",
                  "optional": false,
                  "type": {
                    "name": "Object",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "ViewQuery",
                "basetypes": []
              }
            },
            "from": {
              "name": "from",
              "parameters": {
                "ddoc": {
                  "description": "The design document to use.",
                  "name": "ddoc",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                },
                "name": {
                  "description": "The view to use.",
                  "name": "name",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "ViewQuery",
                "basetypes": []
              }
            },
            "full_set": {
              "name": "full_set",
              "parameters": {
                "full_set": {
                  "description": "",
                  "name": "full_set",
                  "optional": false,
                  "type": {
                    "name": "boolean",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "ViewQuery",
                "basetypes": []
              }
            },
            "group": {
              "name": "group",
              "parameters": {
                "group": {
                  "description": "",
                  "name": "group",
                  "optional": false,
                  "type": {
                    "name": "boolean",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "ViewQuery",
                "basetypes": []
              }
            },
            "group_level": {
              "name": "group_level",
              "parameters": {
                "group_level": {
                  "description": "",
                  "name": "group_level",
                  "optional": false,
                  "type": {
                    "name": "number",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "ViewQuery",
                "basetypes": []
              }
            },
            "id_range": {
              "name": "id_range",
              "parameters": {
                "start": {
                  "description": "",
                  "name": "start",
                  "optional": false,
                  "type": {
                    "name": "string|undefined",
                    "basetypes": ["string", "undefined"]
                  }
                },
                "end": {
                  "description": "",
                  "name": "end",
                  "optional": false,
                  "type": {
                    "name": "string|undefined",
                    "basetypes": ["string", "undefined"]
                  }
                }
              },
              "return": {
                "name": "ViewQuery",
                "basetypes": []
              }
            },
            "include_docs": {
              "name": "include_docs",
              "parameters": {
                "include_docs": {
                  "description": "",
                  "name": "include_docs",
                  "optional": false,
                  "type": {
                    "name": "boolean",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "ViewQuery",
                "basetypes": []
              }
            },
            "key": {
              "name": "key",
              "parameters": {
                "key": {
                  "description": "",
                  "name": "key",
                  "optional": false,
                  "type": {
                    "name": "string",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "ViewQuery",
                "basetypes": []
              }
            },
            "keys": {
              "name": "keys",
              "parameters": {
                "keys": {
                  "description": "",
                  "name": "keys",
                  "optional": false,
                  "type": {
                    "name": "Array<string>",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "ViewQuery",
                "basetypes": []
              }
            },
            "limit": {
              "name": "limit",
              "parameters": {
                "limit": {
                  "description": "",
                  "name": "limit",
                  "optional": false,
                  "type": {
                    "name": "number",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "ViewQuery",
                "basetypes": []
              }
            },
            "on_error": {
              "name": "on_error",
              "parameters": {
                "mode": {
                  "description": "",
                  "name": "mode",
                  "optional": false,
                  "type": {
                    "name": "ViewQuery.ErrorMode",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "ViewQuery",
                "basetypes": []
              }
            },
            "order": {
              "name": "order",
              "parameters": {
                "order": {
                  "description": "",
                  "name": "order",
                  "optional": false,
                  "type": {
                    "name": "ViewQuery.Order",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "ViewQuery",
                "basetypes": []
              }
            },
            "range": {
              "name": "range",
              "parameters": {
                "start": {
                  "description": "",
                  "name": "start",
                  "optional": false,
                  "type": {
                    "name": "string|Array<string>|undefined",
                    "basetypes": ["string", "Array<string>", "undefined"]
                  }
                },
                "end": {
                  "description": "",
                  "name": "end",
                  "optional": false,
                  "type": {
                    "name": "string|Array<string>|undefined",
                    "basetypes": ["string", "Array<string>", "undefined"]
                  }
                },
                "inclusive_end": {
                  "description": "",
                  "name": "inclusive_end",
                  "optional": true,
                  "type": {
                    "name": "boolean",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "ViewQuery",
                "basetypes": []
              }
            },
            "reduce": {
              "name": "reduce",
              "parameters": {
                "reduce": {
                  "description": "",
                  "name": "reduce",
                  "optional": false,
                  "type": {
                    "name": "boolean",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "ViewQuery",
                "basetypes": []
              }
            },
            "skip": {
              "name": "skip",
              "parameters": {
                "skip": {
                  "description": "",
                  "name": "skip",
                  "optional": false,
                  "type": {
                    "name": "number",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "ViewQuery",
                "basetypes": []
              }
            },
            "stale": {
              "name": "stale",
              "parameters": {
                "stale": {
                  "description": "How to update the index.",
                  "name": "stale",
                  "optional": false,
                  "type": {
                    "name": "ViewQuery.Update",
                    "basetypes": []
                  }
                }
              },
              "return": {
                "name": "ViewQuery",
                "basetypes": []
              }
            }
          },
          "name": "ViewQuery",
          "properties": {
            ".ErrorMode": {
              "name": ".ErrorMode",
              "readonly": false,
              "type": {
                "name": "number",
                "basetypes": []
              }
            },
            ".Order": {
              "name": ".Order",
              "readonly": false,
              "type": {
                "name": "number",
                "basetypes": []
              }
            },
            ".Update": {
              "name": ".Update",
              "readonly": false,
              "type": {
                "name": "number",
                "basetypes": []
              }
            }
          },
          "source": "http://docs.couchbase.com/sdk-api/couchbase-node-client-2.1.4/ViewQuery.html"
        }
      },
      "enums": {},
      "functions": {},
      "name": "couchbase",
      "types": {
        "number": {
          "name": "number",
          "basetypes": []
        },
        "string": {
          "name": "string",
          "basetypes": []
        },
        "void": {
          "name": "void",
          "basetypes": []
        },
        "string|Buffer": {
          "name": "string|Buffer",
          "basetypes": ["string", "Buffer"]
        },
        "any": {
          "name": "any",
          "basetypes": []
        },
        "Object": {
          "name": "Object",
          "basetypes": []
        },
        "Bucket.OpCallback": {
          "name": "Bucket.OpCallback",
          "basetypes": []
        },
        "string|Array<string>": {
          "name": "string|Array<string>",
          "basetypes": ["string", "Array<string>"]
        },
        "Array<(Buffer|string)>": {
          "name": "Array<(Buffer|string)>",
          "basetypes": []
        },
        "Bucket.MultiGetCallback": {
          "name": "Bucket.MultiGetCallback",
          "basetypes": []
        },
        "LookupInBuilder": {
          "name": "LookupInBuilder",
          "basetypes": []
        },
        "BucketManager": {
          "name": "BucketManager",
          "basetypes": []
        },
        "MutateInBuilder": {
          "name": "MutateInBuilder",
          "basetypes": []
        },
        "Bucket.ViewQueryResponseBucket.N1qlQueryResponse": {
          "name": "Bucket.ViewQueryResponseBucket.N1qlQueryResponse",
          "basetypes": []
        },
        "ViewQuery|N1qlQuery": {
          "name": "ViewQuery|N1qlQuery",
          "basetypes": ["ViewQuery", "N1qlQuery"]
        },
        "Object|Array": {
          "name": "Object|Array",
          "basetypes": ["Object", "Array"]
        },
        "Bucket.QueryCallback": {
          "name": "Bucket.QueryCallback",
          "basetypes": []
        },
        "EncoderFunction": {
          "name": "EncoderFunction",
          "basetypes": []
        },
        "DecoderFunction": {
          "name": "DecoderFunction",
          "basetypes": []
        },
        "Bucket.CAS": {
          "name": "Bucket.CAS",
          "basetypes": []
        },
        "string|Object": {
          "name": "string|Object",
          "basetypes": ["string", "Object"]
        },
        "ClusterManager": {
          "name": "ClusterManager",
          "basetypes": []
        },
        "Bucket": {
          "name": "Bucket",
          "basetypes": []
        },
        "function": {
          "name": "function",
          "basetypes": []
        },
        "errors": {
          "name": "errors",
          "basetypes": []
        },
        "boolean": {
          "name": "boolean",
          "basetypes": []
        },
        "N1qlStringQuery": {
          "name": "N1qlStringQuery",
          "basetypes": []
        },
        "N1qlQuery.Consistency": {
          "name": "N1qlQuery.Consistency",
          "basetypes": []
        },
        "SpatialQuery": {
          "name": "SpatialQuery",
          "basetypes": []
        },
        "Array<number>": {
          "name": "Array<number>",
          "basetypes": []
        },
        "SpatialQuery.Update": {
          "name": "SpatialQuery.Update",
          "basetypes": []
        },
        "ViewQuery": {
          "name": "ViewQuery",
          "basetypes": []
        },
        "string|undefined": {
          "name": "string|undefined",
          "basetypes": ["string", "undefined"]
        },
        "Array<string>": {
          "name": "Array<string>",
          "basetypes": []
        },
        "ViewQuery.ErrorMode": {
          "name": "ViewQuery.ErrorMode",
          "basetypes": []
        },
        "ViewQuery.Order": {
          "name": "ViewQuery.Order",
          "basetypes": []
        },
        "string|Array<string>|undefined": {
          "name": "string|Array<string>|undefined",
          "basetypes": ["string", "Array<string>", "undefined"]
        },
        "ViewQuery.Update": {
          "name": "ViewQuery.Update",
          "basetypes": []
        }
      },
      "source": "http://docs.couchbase.com/sdk-api/couchbase-node-client-2.1.4/classes.list.html"
    }
  },
  "source": "http://docs.couchbase.com/sdk-api/couchbase-node-client-2.1.4",
  "version": "2.1.4"
}
